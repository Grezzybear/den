version: '3.3'

services:
  # for protonvpn
  proton:
    image: qmcgaw/gluetun
    container_name: proton
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 6881:6881 # qbittorrent
      - 6881:6881/udp # qbittorrent
      - 8085:8085 # qbittorrent
      - 9696:9696 # prowlarr
      - 8191:8191 # flaresolverr
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 8787:8787 # readarr
      - 8686:8686 # lidarr
      - 6767:6767 # bazarr
      - 5299:5299 # lazylibrarian
    volumes:
      - ${BASE}/config/proton-config:/gluetun
    networks:
      - media-network
      - homepage-network
    env_file:
      - .env.secret # holds the end point and keys
    environment:
      - DNS_ADDRESS=127.0.0.11 # necessary as this is dockers dns address and by default it will set to 127.0.0.1 which wont resolve container names
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      - PUID=10001
      - PGID=10000
      - VPN_ENDPOINT_PORT=51820
      - WIREGUARD_ADDRESSES=10.2.0.2/32
      - TZ=${TZ}
      - UMASK=002
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=24h

  # for downloading torrents
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=10002
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
      - WEBUI_PORT=8085
      - TORRENTING_PORT=6881
    volumes:
      - ${BASE}/config/qbittorrent-config:/config
      - MediaTorrents:/downloads
    restart: unless-stopped
    depends_on:
      - proton
    network_mode: "service:proton"

  # for media browsing
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=10003
      - PGID=10000
      - UMASK=002
    ports:
      - '8096:8096'
    volumes:
      - ${BASE}/config/jellyfin-config:/config
      - MediaLibrary:/data
    networks:
      - media-network
      - nginx-network
      - homepage-network
    restart: 'unless-stopped'

  # for listening to audio books
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    container_name: audiobookshelf
    user: 10004:10000
    environment:
      - TZ=${TZ}
      - UMASK=002
      - PUID=10004
      - PGID=10000
    ports:
      - 13378:80
    volumes:
      - ${BASE}/config/audiobookshelf-config:/config
      - MediaAudiobooks:/audiobooks
      - MediaPodcasts:/podcasts
      - MediaAudiobooksMetadata:/metadata
    networks:
      - media-network
      - nginx-network
      - homepage-network
    restart: unless-stopped

  # for media requests
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    user: 10005:10000
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
      - UMASK=002
      - PUID=10005
      - PGID=10000
    ports:
      - 5055:5055
    volumes:
      - ${BASE}/config/jellyseerr-config:/app/config
    networks:
      - media-network
      - nginx-network
      - homepage-network
    restart: unless-stopped

  # for index management
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=10006
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${BASE}/config/prowlarr-config:/config
    restart: unless-stopped
    depends_on:
      - proton
    network_mode: "service:proton"

  # indexer proxy
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    user: 10007:10000
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - PUID=10007
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
    depends_on: 
      - proton
    network_mode: "service:proton"
    restart: unless-stopped

  # for tv
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=10008
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${BASE}/config/sonarr-config:/config
      - MediaTv:/tv
      - MediaTorrents:/downloads
    restart: unless-stopped
    depends_on:
      - proton
    network_mode: "service:proton"

  # for movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=10009
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${BASE}/config/radarr-config:/config
      - MediaMovies:/movies
      - MediaTorrents:/downloads
    restart: unless-stopped
    depends_on:
      - proton
    network_mode: "service:proton"

  # for books
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=10010
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${BASE}/config/readarr-config:/config
      - MediaBooks:/books
      - MediaTorrents:/downloads
    restart: unless-stopped
    depends_on:
      - proton
    network_mode: "service:proton"

  # for music
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=10011
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${BASE}/config/lidarr-config:/config
      - MediaMusic:/music
      - MediaTorrents:/downloads
    restart: unless-stopped
    depends_on:
      - proton
    network_mode: "service:proton"

  # for subtitles
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=10012
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${BASE}/config/bazarr-config:/config
      - MediaMovies:/movies
      - MediaTv:/tv
    restart: unless-stopped
    depends_on:
      - proton
    network_mode: "service:proton"

  # for book metadata
  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    environment:
      - PUID=10013
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
      - DOCKER_MODS=linuxserver/mods:lazylibrarian-ffmpeg #optional
    volumes:
      - ${BASE}/config/lazylibrarian-config:/config
      - MediaTorrents:/downloads
      - MediaBooks:/books
    restart: unless-stopped
    depends_on:
      - proton
    network_mode: "service:proton"

  # for rss feeds
  freshrss:
    image: lscr.io/linuxserver/freshrss:latest
    container_name: freshrss
    environment:
      - PUID=10014
      - PGID=10000
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - ${BASE}/config/freshrss-config:/config
    ports:
      - 8080:80
    restart: unless-stopped

  # for music streaming
  navidrome:
    image: deluan/navidrome:latest
    container_name: navidrome
    user: 10015:10000
    ports:
      - "4533:4533"
    environment:
      ND_SCANSCHEDULE: 1h
      ND_LOGLEVEL: info  
      ND_BASEURL: ""
    volumes:
      - ${BASE}/config/navidrome-config:/data
      - MediaMusic:/music:ro
    networks:
      - media-network
      - nginx-network
      - homepage-network
    restart: unless-stopped

volumes:
  MediaLibrary:
    name: MediaLibrary
    driver_opts:
      type: nfs
      o: addr=${SERVERADDR},nfsvers=4,rw,nolock
      device: ${MEDIABASEPATH}/media
  MediaTorrents:
    name: MediaTorrents
      driver_opts:
        type: nfs
        o: addr=${SERVERADDR},nfsvers=4,rw,nolock
        device: ${MEDIABASEPATH}/torrents
  MediaAudiobooks:
    name: MediaAudiobooks
      driver_opts:
        type: nfs
        o: addr=${SERVERADDR},nfsvers=4,rw,nolock
        device: ${MEDIABASEPATH}/media/audiobooks
  MediaPodcasts:
    name: MediaPodcasts
      driver_opts:
        type: nfs
        o: addr=${SERVERADDR},nfsvers=4,rw,nolock
        device: ${MEDIABASEPATH}/media/podcasts
  MediaAudiobooksMetadata:
    name: MediaAudiobooksMetadata
      driver_opts:
        type: nfs
        o: addr=${SERVERADDR},nfsvers=4,rw,nolock
        device: ${MEDIABASEPATH}/media/audiobookshelf-metadata
  MediaTv:
    name: MediaTv
      driver_opts:
        type: nfs
        o: addr=${SERVERADDR},nfsvers=4,rw,nolock
        device: ${MEDIABASEPATH}/media/tv
  MediaMovies:
      name: MediaMovies
      driver_opts:
        type: nfs
        o: addr=${SERVERADDR},nfsvers=4,rw,nolock
        device: ${MEDIABASEPATH}/media/movies
  MediaBooks:
    name: MediaBooks
      driver_opts:
        type: nfs
        o: addr=${SERVERADDR},nfsvers=4,rw,nolock
        device: ${MEDIABASEPATH}/media/books
  MediaMusic:
    name: MediaMusic
      driver_opts:
        type: nfs
        o: addr=${SERVERADDR},nfsvers=4,rw,nolock
        device: ${MEDIABASEPATH}/media/music

networks:
  default:
  nginx-network:
    external: true
    name: nginx-network
  media-network:
    external: true
    name: media-network
  homepage-network:
    external: true
    name: homepage-network
